<?php//stemrequire_once './stem/Spanish.php';// carga el lexicónfunction cargar($file){	static $lexicon = NULL; 	if (!is_null($lexicon)) return $lexicon;	$file = fopen($file, "r") or exit("Error al abrir el fichero de lexicon.");	$lexicon = array();	$i = 0;	while(!feof($file)){		anade($lexicon, fgets($file));		$i++;	}	fclose($file);	return $lexicon;}// añade un string al lexicónfunction anade(&$lexicon,$string){	$string = trim($string);	$parts = explode("\t", $string);	$stem = spanish::stemm($parts[0]);	$lexicon[$parts[0]] = array("stem" => $stem, "neg" => 0, "pos" => 0);	for ($i=2;$i<count($parts);$i++) {		if (strcmp($parts[$i], "neg") == 0)			$lexicon[$parts[0]]["neg"] = $lexicon[$parts[0]]["neg"]+1;		else if (strcmp($parts[$i], "pos") == 0)			$lexicon[$parts[0]]["pos"] = $lexicon[$parts[0]]["pos"]+1;	}}// devuelve el valor que le da el lexicón a un stringfunction consultar($lexicon, $string){	$valor = 0;	$string = limpia($string);	if (array_key_exists($string,$lexicon)) {		$valor += $lexicon[$string]["pos"];		$valor -= $lexicon[$string]["neg"];	} else if (strlen($string) > 2){		$stem = spanish::stemm($string);		$valor = estaStem($stem, $lexicon);            	} 	return $valor;}// limpia el string de todos los caracteres que no queremos tener en cuentafunction limpia($string){	$string = utf8_decode($string);	$string = quitaTildes($string);	$string = strtolower($string);	$patterns = array();	$patterns[0] = '#http://[a-zA-Z0-9.\/]*#';	$patterns[1] = '#\d#';	$string = preg_replace($patterns, " ", $string);	$string = preg_replace('([^A-Za-z])', ' ', $string);	$string = preg_replace("#(\n|\t|\ )+#", " ", $string);	$string = trim($string);	return $string;}// elimina las tildes y los acentos especialesfunction quitaTildes($string){        $tofind = "ÀÁÂÃÄÅàáâãäåÒÓÔÕÖØòóôõöøÈÉÊËèéêëÇçÌÍÎÏìíîïÙÚÛÜùúûüÿÑñ";        $replac = "AAAAAAaaaaaaOOOOOOooooooEEEEeeeeCcIIIIiiiiUUUUuuuuyNn";        $string=strtr($string,$tofind,$replac);                                                 return $string;}// devuelve un valor para el stem, aleatorio entre las palabras del lexicón que lo contenganfunction estaStem($stem, $lexicon){	$valor = 0;	$valores[] = NULL;	$i=0;	foreach ($lexicon as &$content) {		if (strcmp($stem, $content["stem"]) == 0) {			$valores[$i] = $content["pos"] -  $content["neg"];			$i++;		}	}	if ($valores != NULL) {		$i=rand(0,count($valores)-1);		$valor = $valores[$i];	}	return $valor;}?>